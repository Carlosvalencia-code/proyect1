# =============================================================================
# SYNTHIA STYLE MAIN SITE CONFIGURATION
# =============================================================================
# Production reverse proxy with SSL termination and load balancing

# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name localhost synthia.style www.synthia.style;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;

    # Let's Encrypt challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 'healthy\n';
        add_header Content-Type text/plain;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name localhost synthia.style www.synthia.style;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/synthia.crt;
    ssl_certificate_key /etc/nginx/ssl/synthia.key;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # Enhanced security headers for HTTPS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob: https:; font-src 'self' data:; connect-src 'self' https://generativelanguage.googleapis.com; frame-ancestors 'none';" always;

    # Rate limiting and connection limits
    limit_req zone=general burst=100 nodelay;
    limit_conn conn_limit_per_ip 20;
    limit_conn conn_limit_per_server 1000;

    # API Backend Proxy
    location /api/ {
        # Enhanced rate limiting for API
        limit_req zone=api burst=200 nodelay;
        
        # Proxy configuration
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 16 8k;
        proxy_busy_buffers_size 16k;
        
        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }

    # Authentication endpoints with stricter rate limiting
    location ~ ^/api/v1/auth/(login|register) {
        limit_req zone=login burst=10 nodelay;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Enhanced security for auth endpoints
        proxy_hide_header X-Powered-By;
        add_header X-Auth-Endpoint "true" always;
    }

    # File upload endpoints with specific rate limiting
    location ~ ^/api/v1/(files|facial-analysis|chromatic-analysis) {
        limit_req zone=uploads burst=20 nodelay;
        
        # Increase client body size for file uploads
        client_max_body_size 50M;
        client_body_timeout 300s;
        
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Extended timeouts for file processing
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Request buffering for large uploads
        proxy_request_buffering on;
        proxy_buffering off;
    }

    # Backend health check (internal)
    location /api/health {
        access_log off;
        proxy_pass http://backend_health/api/v1/cache/health;
        proxy_set_header Host $host;
        proxy_connect_timeout 5s;
        proxy_read_timeout 5s;
    }

    # Frontend Application
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts for frontend
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Static assets with long-term caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://frontend;
        proxy_cache_valid 200 1y;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";
        
        # Gzip compression
        gzip_static on;
    }

    # robots.txt
    location = /robots.txt {
        proxy_pass http://frontend;
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }

    # favicon.ico
    location = /favicon.ico {
        proxy_pass http://frontend;
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
        access_log off;
    }

    # Security: Block access to sensitive files
    location ~ /\.(ht|git|svn) {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }

    # Security: Block access to common attack patterns
    location ~ /(wp-admin|wp-login|admin|phpmyadmin) {
        deny all;
        access_log off;
        log_not_found off;
        return 444;
    }

    # Global health check endpoint
    location /health {
        access_log off;
        return 200 'healthy\n';
        add_header Content-Type text/plain;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        proxy_pass http://frontend;
        internal;
    }
    
    location = /50x.html {
        proxy_pass http://frontend;
        internal;
    }
}
