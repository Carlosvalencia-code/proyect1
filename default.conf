# =============================================================================
# SYNTHIA STYLE FRONTEND - NGINX SITE CONFIGURATION
# =============================================================================
# React SPA configuration with optimized caching and security

# Upstream backend for API proxying
upstream backend {
    server synthia-backend:8000;
    keepalive 32;
}

# Main server block
server {
    listen 80;
    listen [::]:80;
    server_name localhost;
    
    # Document root
    root /usr/share/nginx/html;
    index index.html;

    # Security headers for this server
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob: https:; font-src 'self' data:; connect-src 'self' https://generativelanguage.googleapis.com; frame-ancestors 'none';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Rate limiting
    limit_req zone=general burst=20 nodelay;

    # API proxy configuration
    location /api/ {
        # Rate limiting for API calls
        limit_req zone=api burst=50 nodelay;
        
        # Proxy settings
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 'healthy\n';
        add_header Content-Type text/plain;
    }

    # Static assets with long-term caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";
        
        # Gzip for text-based assets
        gzip_static on;
        
        # CORS for fonts and assets
        add_header Access-Control-Allow-Origin "*";
    }

    # Service worker caching strategy
    location ~* ^/(sw|service-worker)\.js$ {
        expires 0;
        add_header Cache-Control "public, max-age=0, must-revalidate";
        add_header Service-Worker-Allowed "/";
    }

    # Manifest files
    location ~* \.(webmanifest|manifest\.json)$ {
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }

    # React Router SPA fallback
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache control for HTML
        expires 0;
        add_header Cache-Control "public, max-age=0, must-revalidate";
        
        # Security headers for HTML
        add_header X-Frame-Options "DENY";
        add_header X-Content-Type-Options "nosniff";
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # robots.txt
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # favicon.ico
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}
